{"meta":{"title":"Jason's Blog","subtitle":null,"description":null,"author":"Jason Zhao","url":"http://yoursite.com"},"pages":[{"title":"About","date":"2017-06-28T05:45:05.973Z","updated":"2017-06-28T05:45:05.973Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2017-06-28T05:45:05.974Z","updated":"2017-06-28T05:45:05.974Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2017-06-28T05:45:05.975Z","updated":"2017-06-28T05:45:05.975Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"带有Nios II软核的FPGA项目Jic文件打包方法","slug":"带有Nios-II软核的FPGA项目JIC文件打包方法","date":"2017-06-29T12:55:05.000Z","updated":"2017-06-29T17:54:12.212Z","comments":true,"path":"2017/06/29/带有Nios-II软核的FPGA项目JIC文件打包方法/","link":"","permalink":"http://yoursite.com/2017/06/29/带有Nios-II软核的FPGA项目JIC文件打包方法/","excerpt":"","text":"将.sof文件和.elf文件复制到同一文件夹下，如d:/bin 编辑nios脚本程序 build.sh 12345678$ sofFile=\"firmware.sof\"$ elfFile=\"app.elf\"$ $ echo \"sof&gt;flash …\"; sof2flash --epcs --input=$sofFile --output=sof.flash --quiet$ echo \"elf&gt;flash …\"; elf2flash --epcs --after=sof.flash --input=$elfFile --output=elf.flash$ echo \"cat flash …\"; cat elf.flash &gt;&gt; sof.flash$ echo \"flash&gt;hex …\"; nios2-elf-objcopy --input-target srec --output-target ihex sof.flash sof_elf.hex$ echo \"del flash …\"; rm -f *.flash 生成Hex文件 运行Nios II Command Shell 跳转至上述文路径，如 d:/bin 1$ cd d:/bin 运行 build.sh在当前文件夹下生成.hex文件 1$ ./build.sh 将上述命令生成的sof_elf.hex转换成.jic文件 在Quartus®软件中，open File &gt; Convert Programming Files &gt; Set the programming file as JTAG Indirect Configuration File (.jic). 在配置下拉菜单中选择合适大小的EPCS器件 命名你的输出.jic 文件 点击Flash Loader的下面，在右边选择Add Device，从列表中选择你的FPGA器件 选中Sof Page , Remove 点击Add Hex data，选择Relative addressing，选择上面生成的.hex 文件 点击Generate可看到目标路径下生成了.jic文件。","categories":[{"name":"FPGA","slug":"FPGA","permalink":"http://yoursite.com/categories/FPGA/"}],"tags":[{"name":"FPGA","slug":"FPGA","permalink":"http://yoursite.com/tags/FPGA/"},{"name":"Nios II","slug":"Nios-II","permalink":"http://yoursite.com/tags/Nios-II/"}]},{"title":"My First FPGA Blog","slug":"My First FPGA Blog","date":"2017-06-28T07:06:58.000Z","updated":"2017-06-28T07:22:28.756Z","comments":true,"path":"2017/06/28/My First FPGA Blog/","link":"","permalink":"http://yoursite.com/2017/06/28/My First FPGA Blog/","excerpt":"","text":"This is a test.","categories":[{"name":"FPGA","slug":"FPGA","permalink":"http://yoursite.com/categories/FPGA/"}],"tags":[{"name":"FPGA","slug":"FPGA","permalink":"http://yoursite.com/tags/FPGA/"},{"name":"Test","slug":"Test","permalink":"http://yoursite.com/tags/Test/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-06-28T03:28:17.362Z","updated":"2017-06-28T03:28:17.363Z","comments":true,"path":"2017/06/28/hello-world/","link":"","permalink":"http://yoursite.com/2017/06/28/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}